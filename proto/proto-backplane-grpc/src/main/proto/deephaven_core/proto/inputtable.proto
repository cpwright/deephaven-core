/*
 * Copyright (c) 2016-2022 Deephaven Data Labs and Patent Pending
 */
syntax = "proto3";

package io.deephaven.proto.backplane.grpc;

option java_multiple_files = true;
option optimize_for = SPEED;
option go_package = "github.com/deephaven/deephaven-core/go/internal/proto/inputtable";

import "deephaven_core/proto/ticket.proto";

/*
 * This service offers methods to manipulate the contents of input tables.
 */
service InputTableService {
    /*
     * Adds the provided table to the specified input table. The new data to add must only have
     * columns (name, types, and order) which match the given input table's columns.
     */
    rpc AddTableToInputTable(AddTableRequest) returns (AddTableResponse) {}

    /*
    * Removes the provided table from the specified input tables. The tables indicating which rows
    * to remove are expected to only have columns that match the key columns of the input table.
    */
    rpc DeleteTableFromInputTable(DeleteTableRequest) returns (DeleteTableResponse) {}

}

message AddTableRequest {
    Ticket input_table = 1;
    Ticket table_to_add = 2;
    // if this field is not present, or is false then errors are propagated to the caller as an exception.
    // if this field is true, then validation errors are sent in the AddTableResponse.
    // Not all errors are considered validation errors, and therefore you must still handle an gRPC error
    // message in addition to structured errors.
    bool structured_validation_errors = 3;
}

// An error indicating invalid values were passed to AddTableRequest, optionally annotated with the input row and column
// that caused the error.
message InputTableValidationError {
    // the error message
    string message = 1;
    // the row position in the table_to_add that caused this error, not present when unknown
    optional int64 row = 2;
    // the column name in the table_to_add that caused this error, not present when unknown
    optional string column = 3;
}

message AddTableResponse {
    // If structured_validation_errors was unset or False on the AddTableRequest, then this field is unused.
    // If structured_validation_errors was set or True on the AddTableRequest, then this field contains the list of validation errors.
    // The field is empty if the request was successful.
    repeated InputTableValidationError validation_errors = 1;
}

message DeleteTableRequest {
    Ticket input_table = 1;
    Ticket table_to_remove = 2;
}

message DeleteTableResponse {

}